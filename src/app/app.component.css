:host {
  --pad: 4rem;
}
:host > header {
  background-color: white;
  border-bottom: 1px solid #e0e0e0;
  display: grid;
  grid-template:
    "logo title     users" 2rem
    "logo timestamp users" 2rem / var(--pad) max-content minmax(4rem, 1fr);
  height: var(--pad);
  position: fixed;
  width: 100vw;
  z-index: 10;
}
:host > header:not(.is-loaded) {
  pointer-events: none;
}
:host > header > .logo {
  --size: 3rem;
  color: var(--active-color);
  font-size: var(--size);
  grid-area: logo;
  height: var(--size);
  padding: 0.3rem 0 0 1rem;
  width: var(--size);
}
:host > header > .title {
  border: 1px transparent solid;
  font-size: 1.125rem;
  grid-area: title;
  margin: 0.7rem 0.4rem 0 0;
  max-height: 1.5rem;
  outline-color: transparent;
  overflow: hidden;
  padding-left: .3rem;
  text-overflow: ellipsis;
}
:host > header > .title:hover {
  border-color: #e5e5e5;
}
:host > header > .title:focus {
  border-color: var(--active-color);
}
:host > header > .title::placeholder {
  font-style: italic;
}
:host > header > .menu {
  align-items: baseline;
  display: flex;
  font-size: 0.8rem;
  grid-area: timestamp;
}
:host > header > .menu p {
  color: #777;
  margin: 0 1rem;
  text-decoration: underline;
}
:host > header > .connected-users {
  align-self: center;
  direction: rtl;
  display: grid;
  grid-area: users;
  grid-gap: .5rem;
  grid-template-columns: repeat(10, 1rem) 1fr;
  padding-right: 1.5rem;
}
:host > header > .connected-users > span {
  background-color: grey;
  border-radius: 50%;
  border: .1rem solid #f4f5f8;
  display: block;
  grid-row: 1;
  height: 2rem;
  width: 2rem;
}
:host > header > .connected-users > :nth-child(n + 11) {
  display: none;
}
:host > header > .connected-users > .user-counter {
  display: none;
}
:host > header > .connected-users > :nth-child(10) ~ .user-counter {
  align-items: center;
  background-color: white;
  border: grey 1pt dashed;
  display: flex;
  font-size: .7rem;
  justify-content: center;
  user-select: none;
}
:host > header > .connected-users > :nth-child(1) {
  grid-column: 1 / 2;
  z-index: 10;
}
:host > header > .connected-users > :nth-child(2) {
  grid-column: 2 / 3;
  z-index: 9;
}
:host > header > .connected-users > :nth-child(3) {
  grid-column: 3 / 4;
  z-index: 8;
}
:host > header > .connected-users > :nth-child(4) {
  grid-column: 4 / 5;
  z-index: 7;
}
:host > header > .connected-users > :nth-child(5) {
  grid-column: 5 / 6;
  z-index: 6;
}
:host > header > .connected-users > :nth-child(6) {
  grid-column: 6 / 7;
  z-index: 5;
}
:host > header > .connected-users > :nth-child(7) {
  grid-column: 7 / 8;
  z-index: 4;
}
:host > header > .connected-users > :nth-child(8) {
  grid-column: 8 / 9;
  z-index: 3;
}
:host > header > .connected-users > :nth-child(9) {
  grid-column: 9 / 10;
  z-index: 2;
}
:host > header > .connected-users > :nth-child(10) {
  grid-column: 10 / 11;
  z-index: 1;
}
:host > header > .connected-users span::ng-deep .emoji {
  filter: brightness(0) invert(1);
  right: calc(50% - .5em);
  top: calc(50% - .5em);
}
.workplace {
  background-color: var(--workspace-color);
  display: grid;
  grid-template: ". editor preview ." 1fr / 5vw calc(50% - 5vw) calc(50% - 5vw) 5vw;
  min-width: 100vh;
  overflow-x: hidden;
  padding-top: 4rem;
  width: 100%;
}
header:not(.is-loaded) ~ .workplace {
  pointer-events: none;
}
header:not(.is-loaded) ~ .workplace::after {
  background-color: #cccc;
  background-size: 4rem;
  content: '';
  height: 4rem;
  left: calc(50% - 2rem);
  mask: url('/assets/loading-bubbles.svg') no-repeat 50% 50%/100% 100%;
  position: absolute;
  top: 8rem;
  width: 4rem;
}
.workplace > codemirror {
  background-color: white;
  box-shadow: -1.5pt 0 0 0.75pt #d1d1d1, -1.5pt 0 3pt 0.75pt #ccc;
  grid-area: editor;
  margin-top: 1rem;
  min-height: calc(100vh - var(--pad));
  position: relative;
}
.workplace > codemirror::ng-deep .CodeMirror {
  height: auto;
}
.workplace > output {
  --lineColor: #aaa;
  background-color: white;
  border-left: var(--active-color) 1pt solid;
  box-shadow: 1.5pt 0 0 0.75pt #d1d1d1, 1.5pt 0 3pt 0.75pt #ccc;
  font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  grid-area: preview;
  margin-top: 1rem;
  min-height: calc(100vh - var(--pad));
  padding: 0 1.25rem;
}
.workplace > output::ng-deep h1,
.workplace > output::ng-deep h2 {
  border-bottom: var(--lineColor) 1px solid;
}
.workplace > output::ng-deep a {
  color: #0366d6;
}
.workplace > output::ng-deep code {
  background-color: #eaeaea;
  border-radius: .1rem;
  display: block;
  overflow-x: auto;
  padding: 1rem;
}
.workplace > output::ng-deep blockquote {
  border: var(--lineColor) 1pt solid;
  border-radius: .5rem;
  display: block;
  margin: 0;
  padding: .2rem 1rem .2rem 3rem;
  position: relative;
}
.workplace > output::ng-deep blockquote::before {
  color: var(--lineColor);
  content: 'â€œ';
  font-family: serif;
  font-size: 4rem;
  left: .7rem;
  position: absolute;
}
@media (max-width: 600px) {
  :host > header > ion-icon,
  :host > header > .menu > app-menu {
    display: none;
  }
  :host > header {
    grid-template:
    "title     users" 2rem
    "timestamp users" 2rem / max-content minmax(4rem, 1fr);
  }
  :host > header > .title,
  :host > header > .menu {
    margin-left: 1rem;
  }
  :host > header > .menu > p {
    margin: 0 0 0 .4rem;
  }
  :host > header > .connected-users {
    grid-gap: 0;
    grid-template-columns: repeat(4, 1rem) 1fr;
  }
  :host > header > .connected-users > :nth-child(n + 6) {
    display: none;
  }
  .workplace {
    grid-template:
      "editor " calc(50vh - 4rem)
      "preview" 50vh / 100vw;
  }
  .workplace > codemirror {
    margin-top: .2rem;
  }
  .workplace > output {
    margin-top: .2rem;
    overflow: auto;
    padding: 0 1rem;
  }
}
@media print {
  header > span,
  header > .menu,
  header > .connected-users {
    display: none !important;
  }
  .workplace {
    background-color: white;
    grid-template-columns: 0 repeat(2, 50%) 0;
    height: unset;
    min-height: 100vh;
  }
  .workplace > codemirror,
  .workplace > output {
    box-shadow: none;
  }
}
